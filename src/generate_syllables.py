import json
import random
import argparse
from utils import Syllable, DEFAULT_AUTOGENERATED_SYLLABLES_FILE

# based on https://www.dictionary.com/e/syllables-and-vowels-in-reading/
TEMPLATES = [
    # closed
    'CoC', 'CaC', 'CooC', 'CaC', 'Ceec',
    # open
    'Ci', 'Cy', 'Co', 'Ca', 'Ce', 'Cu',
    # magic_e
    'CaCe', 'CoCe', 'CiCe',
    # diphthong
    'Coi', 'Coy', 'Coo', 'CooC', 'Cou', 'CouC', 'Cow', 'Cau', 'Cew', 'CouCe',
    # vowel
    "ai", "ea", "oa", "ee", "ay",
]
CONSONANTS = [c for c in 'bcdfghjklmnpqrstvwxyz']


def generate_syllables(templates: list[str], num_syllables: int = 1) -> list[Syllable]:
    syllables = []
    for _ in range(num_syllables):
        template = random.choice(templates)
        syllable = []
        for c in template:
            if c == 'C':
                syllable.append(random.choice(CONSONANTS))
            else:
                syllable.append(c)
        syllable = ''.join(syllable)
        syllables.append(Syllable(syllable, template))
    return syllables


def run(num_syllables: int, output_file: str):
    syllables = generate_syllables(TEMPLATES, num_syllables)
    data = Syllable.list_to_json(syllables)

    with open(output_file, 'w') as f:
        json.dump(data, f, indent=4)

    print(f"Generated {num_syllables} syllables and saved to {output_file}")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Generate a list of syllables")
    parser.add_argument("--num_syllables", type=int, default=1000, help="Number of syllables to generate")
    parser.add_argument("--output_file", type=str, default=DEFAULT_AUTOGENERATED_SYLLABLES_FILE, help="Output file name")
    args = parser.parse_args()

    run(args.num_syllables, args.output_file)
