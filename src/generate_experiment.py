import json
from argparse import ArgumentParser

from utils import DEFAULT_AUTOGENERATED_WORDS_FILE, DEFAULT_AUTOGENERATED_EXPERIMENT_FILE, \
                  InstructionContainer, Experiment, Word, chat_completion

INSTRUCTION = "I will provide you with a word, and you will need to split it into syllables. "        \
              "The word might not be familiar, but any word can be divided into syllables. "          \
              "Don't search for that word, just split it into syllables as you would any other word. "\
              "For example, the word 'together' can be split into 'to-geth-er'. "                     \
              "The response should be in the form of 'syllable1-syllable2-syllable3', "               \
              "without any explanations, just answer. If you can't do it, return 'pass'. "            \
              "The answer must be the first word in the response, regardless if it's a 'pass' or not" \
              ". The word is: "


def run(args):
    try:
        with open(args.words, 'r') as f:
            data = json.load(f)
        words = Word.json_to_list(data)
    except Exception as e:
        print("Error loading inputs:", e)
        exit(1)
    
    results = []
    for i in range(args.num_calls):
        instruction_container = InstructionContainer(INSTRUCTION, words[i])
        instruction_container.response = chat_completion(instruction_container.full_prompt, model=args.model_name)
        results.append(instruction_container)
    
    data = Experiment(results, args.model_name).to_json()

    with open(args.output_file, 'w') as f:
        json.dump(data, f, indent=4)


if __name__ == "__main__":
    parser = ArgumentParser(description="Interact with the language model")
    parser.add_argument("--words",    type=str, default=DEFAULT_AUTOGENERATED_WORDS_FILE,
                        help="Words file name")
    parser.add_argument("--num_calls", type=int, default=300,
                        help="Number of web-based API calls")
    parser.add_argument("--output_file",    type=str, default=DEFAULT_AUTOGENERATED_EXPERIMENT_FILE,
                        help="Output file name")
    parser.add_argument("--model_name", type=str, default="mistralai/Mixtral-8x7B-Instruct-v0.1",
                        help="Name of the language model")
    args = parser.parse_args()

    run(args)
